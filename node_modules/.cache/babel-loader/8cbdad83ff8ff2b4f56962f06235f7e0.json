{"remainingRequest":"/Users/unlogic/innerServices/node_modules/babel-loader/lib/index.js!/Users/unlogic/innerServices/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/unlogic/innerServices/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/unlogic/innerServices/src/views/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/unlogic/innerServices/src/views/Dashboard.vue","mtime":1579704872554},{"path":"/Users/unlogic/innerServices/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/unlogic/innerServices/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/unlogic/innerServices/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/unlogic/innerServices/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <MyHeader/>\n    <div class=\"charts-cont\">\n      <div class=\"chart-wrapper\" v-for=\"(chart, idx) in chartsObj\" :key=\"idx\">\n        <h2>{{ chart.title }}</h2>\n        <div class=\"filter-wrap\">\n          <input type=\"date\" name=\"first_date\" v-model=\"chart.firstDate\">\n          <input type=\"date\" name=\"last_date\" v-model=\"chart.lastDate\">\n          <select v-model=\"chart.actualMark\">\n            <optgroup v-for=\"(item, indx) in marks\" :key=\"indx\"\n                      :label=\"item.Product_Type\">\n              <option v-for=\"(mark, index) in item.Products\" :key=\"index\"\n                      :value=\"mark.Рroduct_Code\">\n                {{ mark.Product_Name }}\n              </option>\n            </optgroup>\n          </select>\n          <select v-if=\"chart.secondSelect\" \n                  v-model=\"activeCountry\" \n                  @change=\"reDraw(chart)\">\n            <option v-for=\"(country, cIdx) in countrys\" :key=\"cIdx\"\n                    :value=\"cIdx\">\n              {{ country.Country }}\n            </option>\n          </select>\n          <button @click=\"getChart(chart.path, chart)\">Получить</button>\n        </div>\n        <ChartBlock\n                  v-if=\"chart.isShow\"\n                  :type=\"chart.type\"\n                  chartName=\"bar_graf\"\n                  :label=\"chart.label\"\n                  :dataSet=\"chart.data\"\n                  :name=\"chart.path\"\n                  :colors=\"colors\"\n                  :labels=\"chart.labels\"/>\n      </div>      \n    </div>\n    <div class=\"tables-cont\">\n      <div class=\"chart-wrapper\" v-for=\"(table, tIdx) in tables\" :key=\"tIdx\">\n        <h2>{{ table.title }}</h2>\n        <div class=\"filter-wrap\">\n          <input type=\"date\" name=\"first_date\" v-model=\"table.firstDate\">\n          <input type=\"date\" name=\"last_date\" \n                v-model=\"table.lastDate\"\n                v-if=\"table.isNotWare\">\n          <select v-model=\"table.actualMark\">\n            <optgroup v-for=\"(item, sindx) in marks\" :key=\"sindx\"\n                      :label=\"item.Product_Type\">\n              <option v-for=\"(mark, sindex) in item.Products\" :key=\"sindex\"\n                      :value=\"mark.Рroduct_Code\">\n                {{ mark.Product_Name }}\n              </option>\n            </optgroup>\n          </select>\n          <button @click=\"getChart(table.path, table)\">Получить</button>\n        </div>\n        <myTable\n              v-if=\"table.isShow\"\n              :heads=\"table.heads\"\n              :content=\"table.content\"/>        \n      </div>        \n    </div>\n    <myNotification\n        :text=\"not_text\"\n        :textColor=\"not_color\"\n        v-show=\"is_not_show\"/>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport MyHeader from '@/components/other/myHeader.vue'\nimport ChartBlock from '@/components/dashboard/chart-block.vue'\nimport Funcs from '../assets/js-funcs/default-funcs.js'\nimport myNotification from '@/components/other/notification.vue'\nimport myTable from '@/components/other/table.vue'\n\nexport default {\n  name: 'dashBoard',\n  components: {\n    ChartBlock,\n    MyHeader, \n    myNotification,\n    myTable\n  },\n  data: () => {\n    return {\n      not_text: '',\n      not_color: 'red',\n      is_not_show: false,\n      colors: [\n        'rgba(26, 188, 156,1.0)',\n        'rgba(241, 196, 15,1.0)',\n        'rgba(46, 204, 113,1.0)',\n        'rgba(230, 126, 34,1.0)',\n        'rgba(52, 152, 219,1.0)',\n        'rgba(231, 76, 60,1.0)',\n        'rgba(155, 89, 182,1.0)',\n        'rgba(236, 240, 241,1.0)',\n        'rgba(52, 73, 94,1.0)',\n        'rgba(149, 165, 166,1.0)',\n        'rgba(22, 160, 133,1.0)',\n        'rgba(243, 156, 18,1.0)',\n        'rgba(39, 174, 96,1.0)',\n        'rgba(211, 84, 0,1.0)',\n        'rgba(41, 128, 185,1.0)',\n        'rgba(192, 57, 43,1.0)',\n        'rgba(142, 68, 173,1.0)',\n        'rgba(189, 195, 199,1.0)',\n        'rgba(44, 62, 80,1.0)',\n        'rgba(255, 234, 167,1.0)',\n        'rgba(85, 239, 196,1.0)',\n        'rgba(250, 177, 160,1.0)',\n        'rgba(129, 236, 236,1.0)',\n        'rgba(255, 118, 117,1.0)',\n        'rgba(162, 155, 254,1.0)',\n        'rgba(232, 67, 147,1.0)',\n        'rgba(196, 229, 56,1.0)',\n        'rgba(111, 30, 81,1.0)',\n        'rgba(153, 128, 250,1.0)'\n      ],\n      marks: [],\n      countrys: [],\n      activeCountry: 0,\n      chartsObj: [\n        {\n          labels: [],\n          label: 'Продажи за месяц',\n          data: [],\n          title: 'Продажи за месяц',\n          isShow: false,\n          actualMark: new String(),\n          firstDate: '2018-01-17',\n          lastDate: '2019-01-17',\n          type: 'line',\n          path: 'month_sales',\n          secondSelect: false     \n        },\n        {\n          labels: [],\n          label: 'Продажи',\n          data: [],\n          title: 'Продажи менеджеров',\n          actualMark: new String(),\n          firstDate: '2018-01-17',\n          lastDate: '2019-01-17',\n          isShow: false,\n          type: 'pie',\n          path: 'manager_sales',\n          secondSelect: false             \n        },\n        {\n          labels: [],\n          label: 'Продажи',\n          data: [],\n          title: 'Продажи клиентов',\n          actualMark: new String(),\n          firstDate: '2018-01-17',\n          lastDate: '2019-01-17',\n          isShow: false,\n          type: 'pie',\n          path: 'client_sales',\n          secondSelect: false             \n        }\n      ],\n      tables: [\n        {\n          title: 'Баланс организаций',\n          isShow: false,\n          actualMark: new String(''),\n          firstDate: '2018-01-17',\n          lastDate: '2019-01-17',\n          path: 'organization_balance',\n          heads: ['Организация', 'Начальный остаток', 'Приход', 'Расход', 'Конечный остаток'],\n          content: [],\n          isNotWare: true\n        },\n        {\n          title: 'Цена по скаладам',\n          isShow: false,\n          actualMark: new String(''),\n          firstDate: '2019-01-17',\n          path: 'warehouse_cost',\n          heads: ['Организация', 'Начальный остаток', 'Приход', 'Расход', 'Конечный остаток'],\n          content: [],\n          isNotWare: false\n        },\n        {\n          title: 'Экономика',\n          isShow: false,\n          actualMark: new String(''),\n          firstDate: '2018-01-17',\n          lastDate: '2019-01-17',\n          path: 'economy',\n          heads: ['Организация', 'Начальный остаток', 'Приход', 'Расход', 'Конечный остаток'],\n          content: [],\n          isNotWare: true          \n        }\n      ]\n    }\n  },\n  methods: {\n    showNotification(text, color) {\n      this.not_text = text;\n      this.not_color = color;\n      this.is_not_show = true;\n      setTimeout(() => {\n        this.is_not_show = false;\n      }, 2500);\n    },\n    getChart(path, chart) {\n      chart.isShow = false;\n      chart.labels = [];\n      chart.data = [];\n      Funcs.doRequest(\n        'post',\n        'https://erp.unlogic.ru/api/v1/charts/' + path,\n        {\n          date_first: chart.firstDate,\n          date_last: chart.lastDate,\n          product_code: chart.actualMark\n        },\n        null,\n        res => {\n          if (!res.data.error) {\n            if (res.data.data.length > 0) {\n              switch (path) {\n                case 'manager_sales':\n                  this.managersSuccess(res, chart);\n                  break;\n                case 'month_sales':\n                  this.monthSalesSuccess(res, chart);\n                  break;\n                case 'client_sales':\n                  this.clientSalesSuccess(res, chart, 0);\n                  break;\n                case 'organization_balance':\n                  this.organizationSuccess(res, chart);\n                  break;\n                default:\n                  // statements_def\n                  break;\n              }              \n            } else {\n              this.showNotification('Набор данных пуст', 'red');\n            }\n          } else {\n            this.showNotification(res.data.data, 'red');\n          }\n        },\n        () => { window.console.log('ERR'); }\n      );\n    },\n    organizationSuccess(res, table) {\n      table.isShow = false;\n      table.content = [];\n      let allStart = 0,\n          allInflow = 0,\n          allOutFlow = 0,\n          allFinish = 0;\n      for (let i in res.data.data) {\n        let start = 0,\n            finish = 0,\n            inflow = 0,\n            outflow = 0;\n        for (let j in res.data.data[i].Warehouses) {\n          start += res.data.data[i].Warehouses[j].Start_balance;\n          finish += res.data.data[i].Warehouses[j].Final_balance;\n          inflow += res.data.data[i].Warehouses[j].Inflow_count;\n          outflow += res.data.data[i].Warehouses[j].Outflow_count;\n        }\n        table.content.push([{\n                              text: res.data.data[i].Organization,\n                              isTitle: true\n                            }\n                            ,start\n                            ,inflow\n                            ,outflow\n                            ,finish]);\n        allStart += start;\n        allInflow += inflow;\n        allOutFlow += outflow;\n        allFinish += finish;\n        for (let j in res.data.data[i].Warehouses) {\n          table.content.push([res.data.data[i].Warehouses[j].Warehouse\n                                      ,res.data.data[i].Warehouses[j].Start_balance\n                                      ,res.data.data[i].Warehouses[j].Inflow_count\n                                      ,res.data.data[i].Warehouses[j].Outflow_count\n                                      ,res.data.data[i].Warehouses[j].Final_balance]);\n        }\n      }\n      table.content.push(['Итого', allStart, allInflow, allOutFlow, allFinish]);\n      table.isShow = true;\n    },\n    clientSalesSuccess(res, chart, activeIndex) {\n      this.countrys = [];\n      this.activeCountry = 0;\n      for (let i in res.data.data) {\n        this.countrys.push(res.data.data[i]);\n      }\n      for (let j in res.data.data[activeIndex].Sold_by_clients) {\n        chart.labels.push(res.data.data[activeIndex].Sold_by_clients[j].Client);\n        chart.data.push(res.data.data[activeIndex].Sold_by_clients[j].Total_sold);        \n      }\n      chart.secondSelect = true;\n      chart.isShow = true;  \n    },\n    reDraw(chart) {\n      chart.isShow = false;\n      chart.labels = [];\n      chart.data = [];\n      setTimeout(() => {\n        for (let j in this.countrys[this.activeCountry].Sold_by_clients) {\n          chart.labels.push(this.countrys[this.activeCountry].Sold_by_clients[j].Client);\n          chart.data.push(this.countrys[this.activeCountry].Sold_by_clients[j].Total_sold);        \n        }\n        chart.isShow = true;  \n      })\n    },\n    managersSuccess(res, chart) {\n      for (let i in res.data.data[0].Managers) {\n        chart.labels.push(res.data.data[0].Managers[i].Manager);\n        chart.data.push(res.data.data[0].Managers[i].Total_sold);\n      }\n      chart.isShow = true;                   \n    },\n    monthSalesSuccess(res, chart) {\n      for (let i in res.data.data) {\n        let month = new Date(res.data.data[i].Month).getMonth();\n        let year = new Date(res.data.data[i].Month).getFullYear();\n        let dict = [\n          'Январь',\n          'Февраль',\n          'Март',\n          'Апрель',\n          'Май',\n          'Июнь',\n          'Июль',\n          'Август',\n          'Сентябрь',\n          'Октябрь',\n          'Ноябрь',\n          'Декабрь'\n        ];\n        chart.labels.push(dict[month] + ' ' + year); \n        chart.data.push(res.data.data[i].Total_sold);\n      }\n      chart.isShow = true;                   \n    }\n  },\n  beforeMount() {\n    Funcs.doRequest(\n      'post',\n      'https://erp.unlogic.ru/api/v1/charts/all_products',\n      null,\n      null,\n      res => {\n        this.marks = res.data.data;\n      },\n      () => { window.console.log('ERR'); }\n    );\n  }\n}\n</script>\n\n<style lang=\"less\">\n\t@import url('../assets/less-templates/base.less');\n\t.dashboard {\n\t\t.flex(column, flex-start, flex-start);\n\t\twidth: 100%;\n\t\tmin-height: 100vh;\n    height: auto;\n\n    & .charts-cont, .tables-cont {\n      .flex(row, space-around, center);\n      width: 100%;\n      flex-wrap: wrap;\n    }\n\n    & .chart-wrapper {\n      .flex(column, flex-start, center);\n      background: #cecece00;\n      box-shadow: 2px 2px 14px 2px rgba(0,0,0,.3);\n      border-radius: 5px;\n      width: 95%;\n      min-width: 320px;\n      padding: 10px;\n      margin: 10px 0;\n\n      & h2 {\n        padding: 10px 0;\n        border-bottom: 1px solid #000;\n        font-size: 1.2em;\n      }\n    }\n    \n    & .charts-cont {\n      & .chart-wrapper:nth-child(2), .chart-wrapper:nth-child(3) {\n        width: 45%;\n      }        \n    }\n\n    & .filter-wrap {\n      .flex(row, space-around, center);\n      width: 100%;\n      max-width: 500px;\n      flex-wrap: wrap;\n      padding: 20px 0;\n\n      & input, select {\n        .input();\n        margin: 5px 0;\n        max-width: 100%;\n      }\n\n      & button {\n        .button(5px, @green-color, #fff);\n      }\n    }\n\t}\n</style>\n"],"sourceRoot":"src/views"}]}